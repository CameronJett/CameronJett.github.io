{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { Component } from '@angular/core';\nimport data from '../assets/data.json'\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'cupcake-clicker-tutorial';\n  json_data:any = []\n\n  constructor() {\n    this.json_data = data.TASKS;\n  }\n\n  ngOnInit() {}\n\n}","<h1>CUPCAKE CLICKER TUTORIAL</h1>\n<h2>This is a step by step tutorial on creating a frontend and backend for a simple cupcake clicking game with users and\n  a leaderboard.  Make sure to follow TDD for this project.  If you are having issues some steps are given angular references, and every step has a link to a Github \n  commit for reference to show all changes on that step, but for best effect try and solve the issues on your own first..</h2>\n\n<ol>\n  <div class='task' *ngFor=\"let task of json_data\">\n    <div class='task-spacer'>\n      <h1>{{ task.HEADER }}</h1>\n      <h3>{{ task.DETAILS }}</h3>\n\n      <div *ngIf=\"task.HYPERLINK\">\n        <a href=\"{{task.HYPERLINK}}\">{{ task.HYPERLINK_TEXT }}</a>\n      </div>\n\n      <div class='user-story' *ngIf=\"task.USER_STORY\">\n        <div class='user-spacer'>\n        <p>{{ task.USER_STORY.AS_A }}</p>\n        <p>{{ task.USER_STORY.I_WANT }}</p>\n        <p>{{ task.USER_STORY.SO_THAT }}</p>\n      </div>\n      </div>\n\n      <div class='github-link'>\n        <a *ngIf=\"task.GITHUB_COMMIT\"\n          href=\"https://github.com/CameronJett/cupcake-clicker-ui/commit/{{task.GITHUB_COMMIT}}\">Github commit:\n          {{ task.GITHUB_COMMIT }}</a>\n          <br><br>\n          <a *ngIf=\"task.GITHUB_SECOND_COMMIT\"\n            href=\"https://github.com/CameronJett/cupcake-clicker-ui/commit/{{task.GITHUB_COMMIT}}\">Github commit:\n            {{ task.GITHUB_SECOND_COMMIT }}</a>\n      </div>\n\n      <img *ngIf=\"task.IMAGE\" src=\"{{task.IMAGE}}\">\n\n    </div>\n  </div>\n</ol>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppComponent } from './app.component';\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}