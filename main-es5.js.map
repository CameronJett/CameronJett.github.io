{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","AppComponent","title","json_data","TASKS","selector","templateUrl","styleUrls","AppModule","declarations","imports","providers","bootstrap","environment","production","bootstrapModule","err","console","error"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { Component } from '@angular/core';\nimport data from '../assets/data.json'\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'cupcake-clicker-tutorial';\n  json_data:any = []\n\n  constructor() {\n    this.json_data = data.TASKS;\n  }\n\n  ngOnInit() {}\n\n}","<h1>CUPCAKE CLICKER TUTORIAL</h1>\n<h2>This is a step by step tutorial on creating a frontend and backend for a simple cupcake clicking game with users and\n  a leaderboard.  Make sure to follow TDD for this project.  If you are having issues some steps are given angular references, and every step has a link to a Github \n  commit for reference to show all changes on that step, but for best effect try and solve the issues on your own first..</h2>\n\n<ol>\n  <div class='task' *ngFor=\"let task of json_data\">\n    <div class='task-spacer'>\n      <h1>{{ task.HEADER }}</h1>\n      <h3>{{ task.DETAILS }}</h3>\n\n      <div *ngIf=\"task.HYPERLINK\">\n        <a href=\"{{task.HYPERLINK}}\">{{ task.HYPERLINK_TEXT }}</a>\n      </div>\n\n      <div class='user-story' *ngIf=\"task.USER_STORY\">\n        <div class='user-spacer'>\n        <p>{{ task.USER_STORY.AS_A }}</p>\n        <p>{{ task.USER_STORY.I_WANT }}</p>\n        <p>{{ task.USER_STORY.SO_THAT }}</p>\n      </div>\n      </div>\n\n      <div class='github-link'>\n        <a *ngIf=\"task.GITHUB_COMMIT\"\n          href=\"https://github.com/CameronJett/cupcake-clicker-ui/commit/{{task.GITHUB_COMMIT}}\">Github commit:\n          {{ task.GITHUB_COMMIT }}</a>\n          <br><br>\n          <a *ngIf=\"task.GITHUB_SECOND_COMMIT\"\n            href=\"https://github.com/CameronJett/cupcake-clicker-ui/commit/{{task.GITHUB_COMMIT}}\">Github commit:\n            {{ task.GITHUB_SECOND_COMMIT }}</a>\n      </div>\n\n      <img *ngIf=\"task.IMAGE\" src=\"{{task.IMAGE}}\">\n\n    </div>\n  </div>\n</ol>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppComponent } from './app.component';\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}